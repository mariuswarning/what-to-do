{"version":3,"sources":["assets/dice.png","src/serviceWorkerRegistration.js","App.js","assets/dice.gif"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","App","useState","isEnabled_allowOvernight","setIsEnabled_allowOvernight","isEnabled_allowPlanned","setIsEnabled_allowPlanned","React","require","dice_img","setDice_img","myText","setMyText","path","setPath","get_random","goDeeper","allow_overnight","allow_planned","roll_animation","elements","depth","tmp","activities","i","length","buildpath","elems","forEach","element","push","num","Math","floor","random","copyArr","pop","setTimeout","View","style","className","Text","color","fontSize","fontWeight","textAlign","flexDirection","height","textAlignVertical","Switch","trackColor","false","true","thumbColor","ios_backgroundColor","onValueChange","previousState","value","Button","title","onPress","item","roll","deeper","try_again","width","Image","alignSelf","source","StatusBar","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/app.fb80f259.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dice.609f9189.png\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  const isEnvProduction = process.env.NODE_ENV === \"production\";\r\n  if (isEnvProduction && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://cra.link/PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, Text, View, Switch, Button, Image } from \"react-native\";\n\nimport activities from \"./assets/activities.json\";\n\nimport * as serviceWorkerRegistration from \"./src/serviceWorkerRegistration\";\n\nconst colour_pink = \"#f768ff\";\nconst colour_seafoam_green = \"#59ff6f\";\nconst colour_green = \"#00c91a\";\n\nconst App = () => {\n  const [isEnabled_allowOvernight, setIsEnabled_allowOvernight] =\n    useState(false);\n  const toggleSwitch_allowOvernight = () =>\n    setIsEnabled_allowOvernight((previousState) => !previousState);\n  const [isEnabled_allowPlanned, setIsEnabled_allowPlanned] = useState(false);\n  const toggleSwitch_allowPlanned = () =>\n    setIsEnabled_allowPlanned((previousState) => !previousState);\n\n  const [dice_img, setDice_img] = React.useState(require(\"./assets/dice.png\"));\n\n  const [myText, setMyText] = React.useState(\n    \"Roll Dice and find out what we will do today 💕\"\n  );\n\n  const [path, setPath] = React.useState([\"items\"]);\n\n  const buildpath = (depth) => {\n    var tmp = activities;\n    for (let i = 0; i < path.length - depth; i++) {\n      tmp = tmp[path[i]];\n    }\n    return tmp;\n  };\n\n  const get_random = (goDeeper, allow_overnight, allow_planned) => {\n    roll_animation();\n    var elements = buildpath(goDeeper ? 0 : 2);\n    var elems = [];\n    if (elements) {\n      elements.forEach((element) => {\n        if (\n          (allow_overnight || element[\"overnight\"] != \"true\") &&\n          (allow_planned || element[\"planning\"] != \"true\")\n        ) {\n          elems.push(element);\n        }\n      });\n      let num = Math.floor(Math.random() * elems.length);\n      if (!goDeeper) {\n        const copyArr = [...path];\n        copyArr.pop();\n        copyArr.pop();\n        copyArr.push(num);\n        copyArr.push(\"items\");\n        setPath(copyArr);\n      } else {\n        setPath([...path, num, \"items\"]);\n      }\n      return elems[num];\n    }\n  };\n\n  const roll_animation = () => {\n    setDice_img(require(\"./assets/dice.gif\"));\n    setTimeout(() => {\n      setDice_img(require(\"./assets/dice.png\"));\n    }, 1000);\n  };\n\n  const roll = () => {\n    var item = get_random(\n      true,\n      isEnabled_allowOvernight,\n      isEnabled_allowPlanned\n    );\n    setTimeout(() => {\n      if (item) {\n        setMyText(item[\"title\"]);\n      } else {\n        setMyText(\"No more ideas below here ☹️\");\n      }\n    }, 1000);\n  };\n\n  const try_again = () => {\n    let deeper = false;\n    if (path.length <= 1) {\n      deeper = true;\n    }\n    var item = get_random(\n      deeper,\n      isEnabled_allowOvernight,\n      isEnabled_allowPlanned\n    );\n    setTimeout(() => {\n      if (item) {\n        setMyText(item[\"title\"]);\n      } else {\n        setMyText(\"No more ideas below here ☹️\");\n      }\n    }, 1000);\n  };\n\n  const restart = () => {\n    setMyText(\"Roll Dice and find out what we will do today 💕\");\n    setPath([\"items\"]);\n  };\n\n  return (\n    <View style={styles.container}>\n      <View className=\"App\">\n        <Text\n          style={{\n            color: colour_pink,\n            fontSize: 25,\n            fontWeight: \"bold\",\n            textAlign: \"center\",\n          }}\n        >\n          Seek & Spread{\"\\n\"}Love & Joy\n        </Text>\n        <Text>\n          {\"\\n\"}\n          {\"\\n\"}\n          {\"\\n\"}\n        </Text>\n        <Text\n          style={{\n            color: colour_pink,\n            textAlign: \"center\",\n            fontWeight: \"bold\",\n          }}\n        >\n          I love you CC ❤️\n        </Text>\n        <Text>\n          {\"\\n\"}\n          {\"\\n\"}\n        </Text>\n\n        <View\n          className=\"switch\"\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-evenly\",\n            height: 30,\n          }}\n        >\n          <Text\n            style={{\n              textAlignVertical: \"center\",\n            }}\n          >\n            Allow Overnight Activities 🌙\n          </Text>\n          <Switch\n            trackColor={{ false: \"#767577\", true: colour_seafoam_green }}\n            thumbColor={isEnabled_allowOvernight ? colour_green : \"#f4f3f4\"}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={toggleSwitch_allowOvernight}\n            value={isEnabled_allowOvernight}\n          />\n        </View>\n        <View\n          className=\"switch\"\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-evenly\",\n            height: 30,\n          }}\n        >\n          <Text\n            style={{\n              textAlignVertical: \"center\",\n            }}\n          >\n            Include Planned Activities 📅\n          </Text>\n          <Switch\n            trackColor={{ false: \"#767577\", true: colour_seafoam_green }}\n            thumbColor={isEnabled_allowPlanned ? colour_green : \"#f4f3f4\"}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={toggleSwitch_allowPlanned}\n            value={isEnabled_allowPlanned}\n          />\n        </View>\n        <Text>{\"\\n\"}</Text>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <Button\n            color={colour_pink}\n            title=\"Roll Dice 🎲\"\n            onPress={() => roll()}\n          />\n          <Button\n            color={colour_pink}\n            title=\"Try Again 🤷‍♀️\"\n            onPress={() => try_again()}\n          />\n        </View>\n        <Text>{\"\\n\"}</Text>\n        <View\n          style={{\n            width: 300,\n            textAlign: \"center\",\n          }}\n        >\n          <Image\n            style={{ width: 50, height: 50, alignSelf: \"center\" }}\n            source={dice_img}\n          />\n          <Text\n            style={{\n              fontSize: 14,\n              fontWeight: \"bold\",\n              textAlign: \"center\",\n            }}\n          >\n            {myText}\n          </Text>\n        </View>\n        <Text>{\"\\n\"}</Text>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <Button\n            color={colour_pink}\n            title=\"Restart 🔄\"\n            onPress={() => restart()}\n          />\n        </View>\n      </View>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n\nexport default App;\n\nserviceWorkerRegistration.register();\n","module.exports = __webpack_public_path__ + \"static/media/dice.d033036c.gif\";"],"sourceRoot":""}